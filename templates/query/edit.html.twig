{% extends 'layout.html.twig' %}

    {% block content_header %}
        <section class="content-header">
            <h1>
                <i class="fa fa-plus-circle" aria-hidden="true"></i>
                Edit Query <span> - {{ query.account.name }} </span>
            </h1>
            <ol class="breadcrumb">
                <li><a href="{{ url('query_index') }}"><i class="fa fa-dashboard"></i> Queries</a></li>
                <li class="active">Edit</li>
            </ol>
        </section>
    {% endblock %}

    {% block content %}

        {% for label, messages in app.flashes(['success', 'error']) %}
            {% for message in messages %}
                <div class="alert alert-{{ label }} alert-dismissable">
                    <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                    {{ message }}
                </div>
            {% endfor %}
        {% endfor %}

        {{ form_start(form, { 'attr' : { 'autocomplete': 'off' } }) }}
        <div class="col-md-4 col-sm-4 col-xs-12">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Customer</h3>
                </div>

                <div class="x_content">

                    <div class="box-body">
                        {{ form_widget(form) }}

                        <div class="form-group">
                            <label>Hotel:</label>
                            <select class="form-control" name="hotel">
                                <option value="{{ query.hotel }}">{{ constant('App\\Entity\\Query::HOTELS')[query.hotel] }}</option>
                                {% for hotelId, hotel in constant('App\\Entity\\Query::HOTELS') %}
                                    <option value="{{ hotelId }}">{{ hotel }}</option>
                                {% endfor %}
                            </select>
                        </div>

                        <div class="form-group">
                            <label>Arrival - Departure:</label>

                            <div class="input-group">
                                <div class="input-group-addon">
                                    <i class="fa fa-clock-o"></i>
                                </div>
                                <input type="text" class="form-control pull-right" name="datetimes" autocomplete="off">
                            </div>
                            <!-- /.input group -->
                        </div>
                        <div class="box-footer">
                            <button id="send" type="submit" class="btn btn-sm bg-green-active">Save</button>

                            <a href="{{ path('query_index') }}" class="btn btn-sm bg-warning">Cancel</a>

                            {% if query.status == constant('App\\Entity\\Query::STATUS_ACCEPTED') %}
                            <a href="#" class="btn btn-sm bg-blue"
                               data-toggle="modal"
                               data-target="#modal-default{{ query.id }}">Edit Lanes
                            </a>
                            {% endif %}

                            {% if query.payed == constant('App\\Entity\\Query::PAYED_NO') %}
                                <a href="{{ path('query_payed', { 'id': query.id }) }}"
                                   class="btn btn-sm bg-orange-active no-wrap">
                                   <span class="hidden-xs hidden-sm">Payed</span>
                                </a>
                            {% endif %}

                            {% if (is_granted(constant('App\\Security\\Voter\\QueryVoter::QUERY_EDIT_ROLE'))) %}

                                {% if query.status != constant('App\\Entity\\Query::STATUS_REJECTED') %}
                                    <a href="{{ path('query_reject', { 'id': query.id }) }}"
                                       class="btn btn-sm bg-red-active no-wrap">
                                        <i class="fa fa-close"></i><span
                                                class="hidden-xs hidden-sm"> Reject</span>
                                    </a>
                                {% endif %}

                                {% if query.status == constant('App\\Entity\\Query::STATUS_REJECTED') %}
                                    <a href="{{ path('query_in_progress', { 'id': query.id }) }}"
                                       class="btn btn-sm bg-teal-active no-wrap">
                                        <span class="hidden-xs hidden-sm"> Change Status to In Progress</span>
                                    </a>
                                {% endif %}
                            {% endif %}

                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-md-8 col-sm-8 col-xs-12">
            {% include 'query/_edit_meal_schedule.html.twig' %}
        </div>

        <div class="col-md-12 col-sm-6 col-xs-12">
            {% include 'query/_edit_facility_schedule.html.twig' %}
        </div>

        {{ form_end(form) }}

        {% if query.status != constant('App\\Entity\\Query::STATUS_REJECTED') %}
            {% include 'query/_edit_lanes.html.twig' %}
        {% endif %}

        {% for key,facility in facilities %}
            {% include 'query/_edit_add_date.html.twig' %}
        {% endfor %}

    {% endblock %}

    {% block javascripts %}
        {{ parent() }}

        {# ADD DATE SCRIPTS #}
        <script>

            $('.move-date-to-schedule').on("click", function () {
                var facilityId = $(this).data('facility');
                var date = $("input[name='facilities["+facilityId+"][date][]']" ).val();
                var mTimeFrom = $("input[name='facilities["+facilityId+"][mTimeFrom][]']" ).val();
                var mTimeTo = $("input[name='facilities["+facilityId+"][mTimeTo][]']" ).val();
                var aTimeFrom = $("input[name='facilities["+facilityId+"][aTimeFrom][]']" ).val();
                var aTimeTo = $("input[name='facilities["+facilityId+"][aTimeTo][]']" ).val();
                var part = $(".facility-"+facilityId+"-part").val();
                console.log(facilityId);

                var row = $('.row_to_copy' + facilityId);
                var clone1 = row.clone(); // copy children too
                var clone2 = row.clone(); // copy children too
                clone1.find("input[name='newschedules[date]["+facilityId+"][]']").val(date);
                clone1.find("input[name='newschedules[mTimeFrom]["+facilityId+"][]']").val(mTimeFrom);
                clone1.find("input[name='newschedules[mTimeTo]["+facilityId+"][]']").val(mTimeTo);
                clone1.find(".facility-part").val(part);

                clone2.find("input[name='newschedules[date]["+facilityId+"][]']").val(date);
                clone2.find("input[name='newschedules[mTimeFrom]["+facilityId+"][]']").val(aTimeFrom);
                clone2.find("input[name='newschedules[mTimeTo]["+facilityId+"][]']").val(aTimeTo);
                clone2.find(".facility-part").val(part);

                clone1.removeClass();
                clone2.removeClass();
                $('.table'+facilityId).append(clone1); // add new row to end of table
                $('.table'+facilityId).append(clone2); // add new row to end of table
            });
        </script>

        <script>
            Date.prototype.ddmmyyyy = function () {
                var mm = this.getMonth() + 1; // getMonth() is zero-based
                var dd = this.getDate();

                return [(dd > 9 ? '' : '0') + dd, (mm > 9 ? '' : '0') + mm, this.getFullYear()].join('/');
            };

            $('input[name="datetimes"]').daterangepicker({
                timePicker: true,
                timePicker24Hour: true,
//                startDate: moment().startOf('hour').add(1, 'day'),
//                endDate: moment().startOf('hour').add(7, 'day'),
//                minDate: moment(),
                opens: "center",
                locale: {
                    format: 'DD/MM/YYYY HH:mm'
                }
            });

            $('input[name="datetimes"]').data('daterangepicker').setStartDate('{{ query.dateOfArrival|date("d/m/Y H:i") }}');
            $('input[name="datetimes"]').data('daterangepicker').setEndDate('{{ query.dateOfDeparture|date("d/m/Y H:i") }}');

            // Returns an array of dates between the two dates
            var getDates = function (startDate, endDate) {
                var dates = [],
                        currentDate = startDate,
                        addDays = function (days) {
                            var date = new Date(this.valueOf());
                            date.setDate(date.getDate() + days);
                            return date;
                        };
                while (currentDate <= endDate) {
                    dates.push(currentDate);
                    currentDate = addDays.call(currentDate, 1);
                }
                return dates;
            };

            function setDateTimePickers() {
                $('.datepicker').datepicker({
                    startDate: "today",
                    setDate: new Date(),
                    format: 'dd/mm/yyyy',
                    orientation: "bottom auto",
                    autoclose: true,
                    todayHighlight: true
                });

                $('.timepicker').timepicker({
                    showMeridian: false,
                });
            }

            $(document).on('click', '.delete-row', function () {
                $(this).parent().parent().remove();
            });

            $(function () {
                setDateTimePickers();
            });

            $('.meal-add-date').on("click", function () {
                console.log('bbbbb');
                var row = $('.meal_row_to_copy');
                var clone = row.clone(); // copy children too

                clone.find('.form-control').each(function (index) {
                    $(this).attr('name', $(this).data('newname'));
                });
                clone.removeClass(); // change id or other attributes/contents
                row.parent().append(clone); // add new row to end of table

                setDateTimePickers();
            });


        </script>

        <!-- iCheck 1.0.1 -->
        <script src="{{ url('app_homepage') }}plugins/iCheck/icheck.min.js"></script>

        <script>
            //iCheck for checkbox and radio inputs
            $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                checkboxClass: 'icheckbox_minimal-blue',
                radioClass: 'iradio_minimal-blue'
            })


            $(".minimal").on("ifChecked", function (e) {
                var checkboxes = $('[data-id="' + $(this).data('id') + '"]');
                var $this = $(this);
                var limit = $(this).data('limit');
                var disabled_count = checkboxes.filter(":disabled").length;
                var checked_count = checkboxes.filter(":checked").length;

                if ((checked_count - disabled_count) > limit) {
                    alert('Max lanes reached!');
                    setTimeout(function () {
                        $this.iCheck('uncheck');
                    }, 1);
                }
            });

        </script>


    {% endblock %}
